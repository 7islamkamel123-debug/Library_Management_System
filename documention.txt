ุชูุงู ุฌุฏูุง ูุง ุฅุณูุงู ๐ุ ุงูููุฏ ุงููู ูุชุจุชู ูุนูููุง ูุดุฑูุน ุตุบูุฑ ููู ุดุงูู ููู ุชุทุจูู ุนููู ุนูู **Entity Framework Core + LINQ** ุจูู ุงููุฒุงูุง ุงูุฃุณุงุณูุฉ.
ุฃูุง ูุฌูุฒูู **Documentation ุฌุงูุฒุฉ** ุจุตูุบุฉ ูุตูุฉ ูููุณูุฉ ุจุญูุซ ุชูุฏุฑ ุชุญุทูุง ูู ููู Word ุฃู PDF ูุน ุงููุดุฑูุน.

---

# ๐ Library Management System โ Documentation

## ๐น Project Overview

ูุฐุง ุงููุดุฑูุน ุนุจุงุฑุฉ ุนู **ุชุทุจูู Console** ุจูุบุฉ C# ุจุงุณุชุฎุฏุงู:

* **Entity Framework Core** ูุฅุฏุงุฑุฉ ุงูุจูุงูุงุช.
* **SQL Server LocalDB** ููุงุนุฏุฉ ุจูุงูุงุช.
* **LINQ** ููุงุณุชุนูุงู ุนู ุงูุจูุงูุงุช.

ุงููุดุฑูุน ูุญุงูู ูุธุงู ุฅุฏุงุฑุฉ ููุชุจุฉ ุจุณูุท ูุดูู: **ูุคูููู โ ูุงุดุฑูู โ ูุชุจ โ ูุฑุงุก โ ุนูุงูุงุช ุจูููู**.

---

## ๐น Entities (Models)

ุชู ุชุนุฑูู ุงูููุงูุงุช ุงูุชุงููุฉ:

1. **Author (Auther)**

   * Id
   * Name

2. **Publisher**

   * Id
   * Name

3. **Book**

   * Id
   * Title
   * Price
   * AuthorId (FK)
   * PublisherId (FK)

4. **Reader**

   * Id
   * Name

5. **ReaderBook** (ุฌุฏูู ูุณูุท Many-to-Many)

   * BookId
   * ReaderId

---

## ๐น Features Implemented

### 1๏ธโฃ Insert & Seed Data

* ุฅุฏุฎุงู ุจูุงูุงุช **Authors, Publishers, Books, Readers**.
* ุฑุจุท ุงููุชุจ ุจุงููุฑุงุก ุนุจุฑ ุฌุฏูู **ReaderBooks**.

---

### 2๏ธโฃ Queries Implemented

#### ๐น Filter & Order

```csharp
var bookDetails = _context.Books
    .Where(b => b.Price > 150)
    .OrderBy(b => b.Price)
    .Select(b => new { b.Title, b.Price })
    .ToList();
```

๐ ุนุฑุถ ุงููุชุจ ุงูุชู ุณุนุฑูุง ุฃูุจุฑ ูู 150ุ ูุฑุชุจุฉ ุญุณุจ ุงูุณุนุฑ.

---

#### ๐น Eager Loading (`Include`)

```csharp
var _include = _context.Books
   .Include(b => b.Auther)
   .Include(b => b.Publisher)
   .ToList();
```

๐ ุชุญููู ุจูุงูุงุช ุงููุชุงุจ ูุน ุงููุคูู ูุงููุงุดุฑ ูู ุงุณุชุนูุงู ูุงุญุฏ.

---

#### ๐น Grouping (GroupBy)

```csharp
var BookAuther = _context.Books
    .Include(b => b.Auther)
    .GroupBy(m => m.Auther)
    .ToList();
```

๐ ุนุฑุถ ูู ูุคูู ูุน ุงููุชุจ ุงูุฎุงุตุฉ ุจู.

---

#### ๐น Predicates (Any, All, Contains)

```csharp
bool anyprice = _context.Books.Any(b => b.Price > 200);
bool allExpensivePrice = _context.Books.All(b => b.Price > 100);
bool containsBook = _context.Books.Select(b => b.Title).Contains("ASP.NET Core");
```

* **Any** โ ูู ููุฌุฏ ูุชุงุจ ุณุนุฑู ุฃูุจุฑ ูู 200ุ
* **All** โ ูู ูู ุงููุชุจ ุณุนุฑูุง ุฃูุจุฑ ูู 100ุ
* **Contains** โ ูู ูุญุชูู ุงููุธุงู ุนูู ูุชุงุจ ุจุนููุงู "ASP.NET Core"ุ

---

#### ๐น Lazy Loading

```csharp
var booksLazy = _context.Books.ToList();
foreach (var book in booksLazy)
{
    Console.WriteLine($"Book: {book.Title}, Author: {book.Auther.Name}");
    foreach (var rb in book.ReaderBook)
        Console.WriteLine($"    Reader: {rb.Reader.Name}");
}
```

๐ ุชุญููู ุงูุจูุงูุงุช ุนูุฏ ุงูุญุงุฌุฉ ููุท (on-demand) ุจุงุณุชุฎุฏุงู ุงูุฎุตุงุฆุต `virtual`.

---

## ๐น Console Output (Sample)

```
๐ Books with Price > 150 (Ordered by Price)
--------------------------------------------
- ASP.NET Core | Price: 200
- EF Core Guide | Price: 250

๐ข Books with Author and Publisher
--------------------------------------------
- Book: C# Basics | Author: islam | Publisher: gomaa
- Book: ASP.NET Core | Author: kamel | Publisher: adam
- Book: EF Core Guide | Author: Abdelna4 | Publisher: zayed

๐ฅ Books with Readers
--------------------------------------------
Book: C# Basics
   - Reader: islam
Book: ASP.NET Core
   - Reader: kamel
Book: EF Core Guide
   - Reader: Abdelnapi

โ๏ธ Group Books by Author
--------------------------------------------
Author: islam
   - Book: C# Basics
Author: kamel
   - Book: ASP.NET Core
Author: Abdelna4
   - Book: EF Core Guide

Any book price > 200? True  
All books price > 100? True  
Contains 'ASP.NET Core'? True  

LAZY LOADING:
Book: C# Basics, Author: islam
    Reader: islam
Book: ASP.NET Core, Author: kamel
    Reader: kamel
Book: EF Core Guide, Author: Abdelna4
    Reader: Abdelnapi
```

---

## ๐น Summary

* โ ุฅูุดุงุก ููุงูุงุช (Entities) ูุน ุงูุนูุงูุงุช.
* โ ุงุณุชุฎุฏุงู **LINQ** ุจุทุฑู ูุชุนุฏุฏุฉ (`Where`, `OrderBy`, `GroupBy`, `Any`, `All`, `Contains`).
* โ ุชุฌุฑุจุฉ **Eager, Lazy, Explicit Loading**.
* โ ุชูุณูู ุงููุฎุฑุฌุงุช ุจุงูู **Console Emojis** ูุนุฑุถ ุฃููู ูููููู.

---

ุชุญุจ ุฃุฌูุฒูู ุงููุณุฎุฉ ุฏู ูู **Word ุฃู PDF** ุจุญูุซ ุชุถูููุง ูุจุงุดุฑุฉ ูุน ุงููุดุฑูุน ุนูู LinkedInุ
